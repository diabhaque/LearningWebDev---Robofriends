{"map":"{\"version\":3,\"sources\":[\"/Users/diab/Desktop/Learning WebDev/robofriends/src/components/SearchBox.js\",\"/Users/diab/Desktop/Learning WebDev/robofriends/src/components/Card.js\",\"/Users/diab/Desktop/Learning WebDev/robofriends/src/components/CardList.js\",\"/Users/diab/Desktop/Learning WebDev/robofriends/src/components/Scroll.js\",\"/Users/diab/Desktop/Learning WebDev/robofriends/src/containers/App.js\",\"/Users/diab/Desktop/Learning WebDev/robofriends/src/serviceWorker.js\",\"/Users/diab/Desktop/Learning WebDev/robofriends/src/index.js\"],\"names\":[\"SearchBox\",\"_ref\",\"searchfield\",\"searchChange\",\"react_default\",\"a\",\"createElement\",\"className\",\"type\",\"placeholder\",\"onChange\",\"Card\",\"key\",\"name\",\"email\",\"id\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this3\",\"filteredRobots\",\"filter\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"iNAeeA,EAbC,SAAAC,GAA+BA,EAA7BC,YAA6B,IAAhBC,EAAgBF,EAAhBE,aAC3B,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAA,CACIC,UAAU,mCACVC,KAAK,SACLC,YAAY,mBACZC,SAAUP,MCIXQ,EAXJ,SAAAV,GAA0BA,EAAxBW,IAAwB,IAAnBC,EAAmBZ,EAAnBY,KAAMC,EAAab,EAAba,MAAOC,EAAMd,EAANc,GAC3B,OACIX,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKU,IAAI,SAASC,IAAG,wBAAAC,OAA0BH,EAA1B,eACrBX,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAKO,GACLT,EAAAC,EAAAC,cAAA,IAAA,KAAIQ,MCSLK,EAdE,SAAAlB,GAAc,IAAXmB,EAAWnB,EAAXmB,OAChB,OACIhB,EAAAC,EAAAC,cAAA,MAAA,KAEQc,EAAOC,IAAI,SAACC,EAAMC,GACd,OACInB,EAAAC,EAAAC,cAACkB,EAAD,CAAMZ,IAAKW,EAAGR,GAAKK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,YCCjFW,EARF,SAACC,GACV,OACItB,EAAAC,EAAAC,cAAA,MAAA,CAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,UAC/DJ,EAAMK,WC8CJC,qBA5CX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAiBJI,eAAe,SAACC,GACZR,EAAKS,SAAS,CACVxC,YAAauC,EAAME,OAAOC,SAlB9BX,EAAKY,MAAM,CACPzB,OAAQ,GACRlB,YAAY,IAJP+B,mFAQM,IAAAa,EAAAV,KACfW,MAAM,8CACDC,KAAK,SAAAC,GACF,OAAOA,EAASC,SAEnBF,KAAK,SAAAG,GACFL,EAAKJ,SAAS,CAACtB,OAAO+B,uCAS1B,IAAAC,EAAAhB,KACEiB,EAAgBjB,KAAKS,MAAMzB,OAAOkC,OAAO,SAAAlC,GAC3C,OAAOA,EAAOP,KAAK0C,cAAcC,SAASJ,EAAKP,MAAM3C,YAAYqD,iBAErE,OAA+B,IAA3BnB,KAAKS,MAAMzB,OAAOqC,OACXrD,EAAAC,EAAAC,cAAA,KAAA,KAAA,cAGHF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWvD,aAAciC,KAAKI,iBAC9BpC,EAAAC,EAAAC,cAACqD,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUxC,OAAQiC,aApCxBQ,EAAAA,wBCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst SearchBox=({searchfield, searchChange})=>{\\n    return(\\n        <div className='pa2'>\\n            <input \\n                className='pa3 ba b--green bg-lightest-blue'\\n                type=\\\"search\\\" \\n                placeholder=\\\"search robots...\\\" \\n                onChange={searchChange}\\n            />\\n        </div>\\n    )\\n}\\n\\nexport default SearchBox;\\n\",\"import React from 'react';\\n\\nconst Card=({key, name, email, id})=>{\\n    return(\\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\n            <img alt='robots' src={`https://robohash.org/${id}?200x200\\\"`} />\\n            <div>\\n                <h2>{name}</h2>\\n                <p>{email}</p>\\n            </div>\\n        </div> \\n    );\\n}\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots })=>{\\n    return(\\n        <div>\\n            {\\n                robots.map((user, i) => {\\n                    return(\\n                        <Card key={i} id ={robots[i].id} name={robots[i].name} email={robots[i].email} />\\n                    )\\n                })\\n            }\\n        </div>\\n    )\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst Scroll=(props)=>{\\n    return(\\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'800px' }}>\\n            {props.children}\\n        </div>\\n    )\\n}\\n\\nexport default Scroll\",\"import React, { Component } from 'react';\\nimport SearchBox from '../components/SearchBox';\\nimport CardList from '../components/CardList';\\nimport Scroll from '../components/Scroll'\\nimport './App.css';\\n\\nclass App extends Component{\\n    constructor(){\\n        super()\\n        this.state={\\n            robots: [],\\n            searchfield:''\\n        }\\n    }\\n\\n    componentDidMount(){\\n        fetch('https://jsonplaceholder.typicode.com/users')\\n            .then(response =>{\\n                return response.json()\\n            })\\n            .then(users => {\\n                this.setState({robots:users})\\n            })\\n    }\\n\\n    onSearchChange=(event)=>{\\n        this.setState({\\n            searchfield: event.target.value\\n        })\\n    }\\n    render(){\\n        const filteredRobots= this.state.robots.filter(robots =>{\\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\\n        })\\n        if (this.state.robots.length===0){\\n            return <h1>Loading...</h1>\\n        }else{\\n            return (\\n                <div className=\\\"tc\\\">\\n                    <h1 className='f1'>RoboFriends</h1>\\n                    <SearchBox searchChange={this.onSearchChange}/>\\n                    <Scroll>\\n                        <CardList robots={filteredRobots} />\\n                    </Scroll>\\n                </div>\\n            )\\n        }   \\n    }\\n}\\n\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './containers/App';\\nimport './index.css';\\nimport 'tachyons';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,n){},14:function(e,t,n){},16:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),l=n(3),i=n(4),s=n(6),h=n(5),u=n(7),m=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots...\",onChange:t}))},d=function(e){e.key;var t=e.name,n=e.email,a=e.id;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/\".concat(a,'?200x200\"')}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,t),r.a.createElement(\"p\",null,n)))},b=function(e){var t=e.robots;return r.a.createElement(\"div\",null,t.map(function(e,n){return r.a.createElement(d,{key:n,id:t[n].id,name:t[n].name,email:t[n].email})}))},f=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"1px solid black\",height:\"800px\"}},e.children)},g=(n(13),function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(h.a)(t).call(this))).onSearchChange=function(t){e.setState({searchfield:t.target.value})},e.state={robots:[],searchfield:\"\"},e}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){e.setState({robots:t})})}},{key:\"render\",value:function(){var e=this,t=this.state.robots.filter(function(t){return t.name.toLowerCase().includes(e.state.searchfield.toLowerCase())});return 0===this.state.robots.length?r.a.createElement(\"h1\",null,\"Loading...\"):r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),r.a.createElement(m,{searchChange:this.onSearchChange}),r.a.createElement(f,null,r.a.createElement(b,{robots:t})))}}]),t}(a.Component));n(14),n(15),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(16)}},[[8,1,2]]]);","extractedComments":[]}