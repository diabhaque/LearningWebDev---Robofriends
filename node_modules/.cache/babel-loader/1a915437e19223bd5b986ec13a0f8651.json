{"ast":null,"code":"var _jsxFileName = \"/Users/diab/Desktop/Learning WebDev/robofriends/LearningWebDev---Robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange,\n          robots = _this$props.robots,\n          isPending = _this$props.isPending;\n    const filteredRobots = robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (isPending) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ErrorBoundry, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/diab/Desktop/Learning WebDev/robofriends/LearningWebDev---Robofriends/src/containers/App.js"],"names":["React","Component","SearchBox","CardList","ErrorBoundry","Scroll","setSearchField","requestRobots","connect","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filteredRobots","filter","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,eAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD7B;AAEHE,IAAAA,MAAM,EAAEH,KAAK,CAACH,aAAN,CAAoBM,MAFzB;AAGHC,IAAAA,SAAS,EAAEJ,KAAK,CAACH,aAAN,CAAoBO,SAH5B;AAIHC,IAAAA,KAAK,EAAEL,KAAK,CAACH,aAAN,CAAoBQ;AAJxB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAa;AACpC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACX,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADhC;AAEHC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACV,aAAa,EAAd;AAF5B,GAAP;AAIH,CALD;;AAOA,MAAMgB,GAAN,SAAkBtB,SAAlB,CAA2B;AAEvBuB,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,eAAX;AACH;;AAEDI,EAAAA,MAAM,GAAE;AAAA,wBACwD,KAAKD,KAD7D;AAAA,UACId,WADJ,eACIA,WADJ;AAAA,UACkBO,cADlB,eACkBA,cADlB;AAAA,UACkCL,MADlC,eACkCA,MADlC;AAAA,UAC2CC,SAD3C,eAC2CA,SAD3C;AAEJ,UAAMa,cAAc,GAAEd,MAAM,CAACe,MAAP,CAAcf,MAAM,IAAG;AACzC,aAAOA,MAAM,CAACgB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCpB,WAAW,CAACmB,WAAZ,EAAnC,CAAP;AACH,KAFqB,CAAtB;;AAGA,QAAIhB,SAAJ,EAAc;AACV,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEK;AACD,aACI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEI,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAES,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAHJ,CADJ;AAWH;AACJ;;AA1BsB;;AA8B3B,eAAenB,OAAO,CAACC,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error   \n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots())\n    }\n}\n\nclass App extends Component{\n\n    componentDidMount(){\n        this.props.onRequestRobots();\n    }\n\n    render(){\n        const { searchField , onSearchChange, robots , isPending }= this.props;\n        const filteredRobots= robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        if (isPending){\n            return <h1>Loading...</h1>\n        }else{ \n            return (\n                <div className=\"tc\">\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        }   \n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}